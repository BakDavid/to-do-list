{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","App","useState","setTodos","todoNameRef","useRef","LOCAL_STORAGE_KEY","myGenerateKey","Date","getTime","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","filter","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+KAEe,SAASA,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAKC,EAAa,EAAbA,WAI/B,OACI,8BACI,kCACI,uBAAOC,KAAK,WAAWC,QAASH,EAAKI,SAAUC,SAN3D,WACIJ,EAAWD,EAAKM,OAMPN,EAAKO,UCPP,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAMR,EAAa,EAAbA,WACpC,OACIQ,EAAMC,KAAI,SAAAV,GACN,OAAO,cAACD,EAAD,CAAoBE,WAAYA,EAAYD,KAAMA,GAAvCA,EAAKM,OCsDpBK,MAzDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACMC,EAAcC,mBAEdC,EAAoB,gBAwB1B,SAASC,EAAcV,GACrB,MAAM,GAAN,OAAUA,EAAV,aAAkB,IAAIW,MAAOC,WAiB/B,OAxCAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQT,IACjDK,GAAaR,EAASQ,KACxB,IAEHD,qBAAU,WACRI,aAAaE,QAAQV,EAAmBM,KAAKK,UAAUlB,MACtD,CAACA,IAkCF,qCACE,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WAjC5B,SAAoBK,GAClB,IAAMsB,EAAQ,YAAOnB,GACfT,EAAO4B,EAASC,MAAK,SAAA7B,GAAI,OAAIA,EAAKM,KAAOA,KAC/CN,EAAKI,UAAYJ,EAAKI,SACtBS,EAASe,MA8BP,uBAAOE,IAAKhB,EAAaZ,KAAK,SAC9B,wBAAQ6B,QAlBZ,SAAuBC,GACrB,IAAMzB,EAAOO,EAAYmB,QAAQC,MACrB,KAAT3B,IACHM,GAAS,SAAAsB,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAC7B,GAAIW,EAAcV,GAAOA,KAAMA,EAAMH,UAAU,QAExEU,EAAYmB,QAAQC,MAAQ,OAY1B,sBACA,wBAAQH,QAVZ,WACE,IAAMH,EAAWnB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAC5CS,EAASe,IAQP,mCACA,gCAAMnB,EAAM2B,QAAO,SAAApC,GAAI,OAAKA,EAAKI,YAAUiC,OAA3C,qBCnDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4a396805.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Todo({todo,toggleTodo}) {\r\n    function handleTodoClick(){\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type=\"checkbox\" checked={todo.complete} onChange={handleTodoClick}/>\r\n                {todo.name}\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({todos,toggleTodo}) {\r\n    return (\r\n        todos.map(todo =>{\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo}/>\r\n        })\r\n    )\r\n}\r\n","import React, {useState, useRef, useEffect} from \"react\";\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef()\n\n  const LOCAL_STORAGE_KEY = 'todoApp.todos'\n\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\n    if(storedTodos) setTodos(storedTodos)\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\n  }, [todos])\n\n  function toggleTodo(id){\n    const newTodos = [...todos]\n    const todo = newTodos.find(todo => todo.id === id)\n    todo.complete = !todo.complete\n    setTodos(newTodos)\n  }\n\n  // this is to generate unique keys for elements\n  const generateKey = (pre) => {\n    return `${ pre }_${ new Date().getTime() }`;\n  }\n\n  // this is my function that I rewrote, it's similar to the previus one\n  function myGenerateKey(name){\n    return `${name}_${new Date().getTime()}`;\n  }\n\n  function handleAddTodo(e){\n    const name = todoNameRef.current.value\n    if(name === '') return\n    setTodos(prevTodos => {\n      return [...prevTodos, {id: myGenerateKey(name), name: name, complete: false}]\n    })\n    todoNameRef.current.value = null\n  }\n\n  function handleClearTodo(){\n    const newTodos = todos.filter(todo => !todo.complete)\n    setTodos(newTodos)\n  }\n\n  return (\n    <>\n      <TodoList todos={todos} toggleTodo={toggleTodo}/>\n      <input ref={todoNameRef} type=\"text\"/>\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodo}>Clear Completed Todos</button>\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\n    </>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}